# Kafka configuration
KAFKA_HOST=kafka
KAFKA_CLUSTER_ID=iOlv-r1aTEG5vkDqOkwssA
KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
KAFKA_CFG_NODE_ID=1


# Redis configuration
REDIS_PASSWORD=Redis@123
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=Redis@123

# POSTGRES configuration
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=dt_user
POSTGRES_DATABASE=distributed_tracing
POSTGRES_PASSWORD=password@123
POSTGRES_ROOT_PASSWORD=rootpassword@123

# Redis-Helper configuration
REDIS_HELPER_HOST=redis-helper
TABLE_NAME=application_partition_mapping
SCHEDULE_INTERVAL=5 # in seconds

# OTLP Kafka Bridge configuration
OTLP_KAFKA_BRIDGE_HOSTNAME=0.0.0.0
OTLP_KAFKA_BRIDGE_HOST=otlp-kafka-bridge
OTLP_KAFKA_BRIDGE_PORT=5000
OTLP_KAFKA_BRIDGE_TOPIC=otlp_topic


# NGINX configuration - OTLP Kafka Bridge LB
NGINX_OTLP_KAFKA_BRIDGE_LB_HOST=otlp-kafka-bridge_lb
NGINX_OTLP_KAFKA_BRIDGE_LB_PORT=8080
NGINX_OTLP_KAFKA_BRIDGE_LB_SERVER_NAME=otlp-kafka-bridge_lb
NGINX_OTLP_KAFKA_BRIDGE_LB_UPSTREAM=otlp-kafka-bridge_1:5000, otlp-kafka-bridge_2:5000 # Add more upstreams if needed


# Microservices configuration
OTEL_EXPORTER_OTLP_ENDPOINT=http://${NGINX_OTLP_KAFKA_BRIDGE_LB_HOST}:${NGINX_OTLP_KAFKA_BRIDGE_LB_PORT}
OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
OTEL_EXPORTER_OTLP_HEADERS=application=distributed_tracing
OTEL_RESOURCE_ATTRIBUTES=service.namespace=distributed_tracing
OTEL_SERVICE_NAME=microservice1
OTEL_SERVICE_VERSION=1.0.0

